{"version":3,"sources":["components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","services/pixabayApi.js","App.js","index.js"],"names":["Button","onClick","type","className","ImageGalleryItem","src","srcLarge","data-source","alt","ImageGallery","items","children","map","id","webformatURL","largeImageURL","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Component","Searchbar","state","query","handleChange","setState","value","handleSubmit","preventDefault","onSubmit","onChange","autoComplete","autoFocus","placeholder","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","App","images","isLoading","error","showModal","largeImg","handleOpenModal","e","dataset","source","handleCloseModal","onChangeQuery","fetchImages","PixabayApi","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProps","prevState","shouldRenderBtn","length","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8a8e14f.chunk.js","sourcesContent":["const Button = ({ onClick, type = \"button\" }) => {\n  return (\n    <button onClick={onClick} className=\"Button\" type={type}>\n      Load more\n    </button>\n  );\n};\nexport default Button;\n","const ImageGalleryItem = ({ src, srcLarge, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\n      <img\n        src={src}\n        data-source={srcLarge}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nconst ImageGallery = ({ items, onClick, children }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {items.map(({ id, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            onClick={onClick}\n            key={id}\n            src={webformatURL}\n            srcLarge={largeImageURL}\n          />\n        ))}\n      </ul>\n      {children}\n    </>\n  );\n};\nexport default ImageGallery;\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = (event) => {\n    const { currentTarget, target } = event;\n    if (currentTarget === target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div onClick={this.handleBackdropClick} className=\"Overlay\">\n        <div className=\"Modal\">\n          <img className=\"Modal-img\" src={this.props.src} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\nexport default Modal;\n","import { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n  handleChange = (event) => {\n    this.setState({\n      query: event.currentTarget.value,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: \"\" });\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={this.state.query}\n            onChange={this.handleChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import axios from \"axios\";\n\nconst fetchImg = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=20874623-da315c02bf395d576f7082eb6&image_type=photo&orientation=horizontal&per_page=${pageSize}`\n    )\n    .then((response) => response.data.hits);\n};\n\nexport default { fetchImg };\n","import { Component } from \"react\";\nimport ReactLoading from \"react-loading\";\nimport Button from \"./components/Button/Button\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal/Modal\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport PixabayApi from \"./services/pixabayApi\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n    showModal: false,\n    largeImg: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n  handleOpenModal = (e) => {\n    this.setState({\n      showModal: true,\n      largeImg: e.target.dataset.source,\n    });\n  };\n  handleCloseModal = () => {\n    this.setState({\n      showModal: false,\n      largeImg: \"\",\n    });\n  };\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    this.setState({ isLoading: true });\n    const options = {\n      currentPage: currentPage,\n      searchQuery: searchQuery,\n    };\n    PixabayApi.fetchImg(options)\n      .then((data) => {\n        this.setState(({ images, currentPage }) => ({\n          images: [...images, ...data],\n          currentPage: currentPage + 1,\n        }));\n      })\n      .then(() => {\n        if (currentPage > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((e) => this.setState({ error: e }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n  render() {\n    const { images, isLoading, showModal, largeImg } = this.state;\n    const shouldRenderBtn = images.length > 0 && !isLoading;\n    return (\n      <>\n        <div className=\"App\">\n          <Searchbar onSubmit={this.onChangeQuery} />\n          <ImageGallery onClick={this.handleOpenModal} items={images}>\n            {isLoading && (\n              <ReactLoading\n                className=\"spinner\"\n                type=\"spin\"\n                color=\"#303f9f\"\n                height={50}\n                width={50}\n              />\n            )}\n            {shouldRenderBtn && <Button onClick={this.fetchImages} />}\n          </ImageGallery>\n          {showModal && (\n            <Modal onClose={this.handleCloseModal} src={largeImg} />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}